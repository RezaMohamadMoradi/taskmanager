@page "/Login"
@using System.ComponentModel.DataAnnotations
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@using taskmanager.Model
@using taskmanager.Services
@using Task = System.Threading.Tasks.Task
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject NavigationManager NavigationManager
@inject UserServices UserServices;

<PageTitle>Login</PageTitle>

<section class="vh-100" style="background-color: #eee;">
    <div class="container h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-lg-12 col-xl-11">
                <div class="card text-black" style="border-radius: 25px;">
                    <div class="card-body p-md-5">
                        <div class="row justify-content-center">
                            <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Login</p>
                                
                                <EditForm Model="LoginClass" FormName="Login"  OnValidSubmit="onlogin">
                                    @* مدل اختصاصی این فرم به همراه نام فرم و متد مرتبط با آن *@
                                    <DataAnnotationsValidator />
                                    <ValidationSummary />
                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                                        <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                            <InputText type="email" id="form3Example3c" class="form-control" @bind-Value="LoginClass.email" />
                                            <label class="form-label" for="form3Example3c">Your Email</label>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                                        <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                            <InputText type="text" id="form3Example4c" class="form-control" @bind-Value="LoginClass.name" />
                                            <label class="form-label" for="form3Example4c">name</label>
                                        </div>
                                    </div>

                                    <div class="d-flex flex-row align-items-center mb-4">
                                        <i class="fas fa-lock fa-lg me-3 fa-fw"></i>
                                        <div data-mdb-input-init class="form-outline flex-fill mb-0">
                                            <InputText type="password" id="form3Example4c" class="form-control" @bind-Value="LoginClass.password" />
                                            <label class="form-label" for="form3Example4c">Password</label>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
                                        <button type="submit" class="btn btn-primary btn-lg">Login</button>
                                    </div>
                                </EditForm>

                            </div>
                            <div class="col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2">
                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp"
                                     class="img-fluid" alt="Sample image">
                            </div>
                        </div>
                    </div>
                    <div class="text-center">
                        <p>Not a member? <a href="/Register">Register</a></p>
                    </div>
                   
                </div>
            </div>
        </div>
    </div>
</section>

@code {
    [CascadingParameter] public HttpContext HttpContext { get; set; }
    public class loginclass
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        public string password { get; set; }

        public string name { get; set; }
    }
    [SupplyParameterFromForm(FormName = "Login")]//مشخص میکنیم برای کدام فرم است این مدل
    public loginclass LoginClass { get; set; } = new();
    public string ErrorMessage { get; set; } = string.Empty;// مدیریت خطا


    [HttpPost]
    private async Task onlogin()
    {
        // یافتن کاربر بر اساس نام کاربری
        var user = await UserManager.FindByNameAsync(LoginClass.name);

        if (user != null)
        {
            // بررسی رمز عبور
            if (await UserManager.CheckPasswordAsync(user, LoginClass.password))
            {
                // ایجاد لیست Claims
                var claims = new List<Claim>
                {
                    new Claim(ClaimTypes.Name, user.UserName),
                    new Claim(ClaimTypes.Email, user.Email), // افزودن ایمیل به Claims

                };

                // ساختن Identity و ClaimsPrincipal
                var identity = new ClaimsIdentity(claims, "ApplicationCookie");
                var principal = new ClaimsPrincipal(identity);

                // لاگین کردن کاربر با ClaimsPrincipal
                await SignInManager.SignInWithClaimsAsync(user, isPersistent: true, claims);

                // هدایت به صفحه اصلی
                NavigationManager.NavigateTo("/");
            }
            else
            {
                ErrorMessage = "Invalid password. Please try again.";
            }
        }
        else
        {
            ErrorMessage = "User not found. Please try again.";
        }
    }
    

}
